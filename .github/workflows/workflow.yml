# Run Python unit tests in continuous integration mode.
name: Continuous Integration

on: [push, pull_request]

jobs:
  python-nose:
    runs-on: ubuntu-latest

    services:
      # Unit test rely on a local MySQL instance with an empty root password.
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

      redis:
        # Some unit tests also try to write to Redis
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify MySQL connection from host
        run: |
          sudo apt-get update && sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 3306 -uroot -e "SHOW DATABASES"
      - name: Create test databases
        run: |
          mysql --host 127.0.0.1 --port 3306 -uroot -e 'CREATE DATABASE enwp10_test; CREATE DATABASE enwikip_test;'

      - name: Test with nose
        run: |
          nosetests --with-coverage

      - name: Upload to Codecov
        uses: codecov/codecov-action@v1.3.1
        with:
          fail_ci_if_error: true

  frontend-cypress:
    runs-on: ubuntu-latest

    services:
      wp1-dev-db:
        image: openzim/wp1-dev-database
        ports:
          - 6300:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v2

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Javascript dependencies
        run: |
          cd wp1-frontend && yarn

      - name: Start web API server
        env:
          FLASK_APP: wp1.web.app
          FLASK_DEBUG: 1
        run: |
          cp wp1/credentials.py.e2e wp1/credentials.py
          python -m flask run &
          cd wp1-frontend
          $(yarn bin)/wait-on http://localhost:5000/
          curl http://localhost:5000/v1/projects/

      - name: Start frontend server
        run: |
          cd wp1-frontend
          yarn serve &
          $(yarn bin)/wait-on http://localhost:3000

      - name: Run frontend tests
        run: |
          cd wp1-frontend
          $(yarn bin)/cypress run
